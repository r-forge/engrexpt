% NOTE -- ONLY EDIT THE .Rnw FILE!!!  The .tex file is
% likely to be overwritten.
\usepackage{SweaveSlides}
\title[Chapter 2]{Chapter 2: Summarizing data}
%\subject{Probability}
\SweaveOpts{engine=R,eps=FALSE,pdf=TRUE,width=10,height=6.5,strip.white=all,keep.source=TRUE}
\SweaveOpts{prefix=TRUE,prefix.string=figs/ch02,include=TRUE}
\begin{document}
\begin{frame}
  \titlepage
\end{frame}
\begin{frame}
  \frametitle{Outline}
  \tableofcontents[pausesections]
\end{frame}
<<preliminaries,echo=FALSE,results=hide>>=
options(width=60)
library(EngrExpt)
options(show.signif.stars = FALSE)
#lattice.options(default.theme = function() standard.theme(color=FALSE))
@ 
\section[2.1 Simple graphical]{2.1 Simple graphical techniques}
\label{sec:02.1}

\begin{frame}\frametitle{Section 2.1: Univariate data}
  \begin{itemize}
  \item Graphs can
    \begin{itemize}
    \item summarize the data
    \item show typical and atypical values
    \item highlight relationships between variables
    \item show how the data are spread out, which we call the
      \Emph{distribution} of the data
    \end{itemize}
  \item Often we observe multiple characteristics on each experimental
    run or observation.  We call such data \Emph{multivariate}.  If we
    only observe one characteristic we say the data are
    \Emph{univariate}.
  \item Typical plots of univariate, numeric data are
    \Emph{histograms} (\code{histogram}) or \Emph{density plots}
    (\code{densityplot}), \Emph{box-and-whisker
      plots} (\code{bwplot}) and \Emph{dotplots} (\code{dotplot}).
    (Names in parentheses are the names of the corresponding \R{}
    function from the \code{lattice} package.)
  \end{itemize}
\end{frame}

\begin{frame}[fragile]\frametitle{The railcar data}
  \begin{itemize}
  \item Example 2.1.1 describes the \code{railcar} data, which are 53
    observations of the number of days that a customer holds a rail
    car after delivery.  The authors say the data are in a file named
    \Emph{railcar.txt}.  We will use the dataset called \code{railcar}
    from the \code{EngrExpt} package for \R{}.
  \item All of the data sets are described in Appendix A, starting on
    page 424.  When you start \R{} you should attach the EngrExpt
    package, using \code{library(EngrExpt)}.  To check on the form of
    a data set use, e.g., \code{str(railcar)}, and compare the result
    to the description in Appendix A.
  \end{itemize}
<<railcarstr>>=
library(EngrExpt)
str(railcar)
@   
\end{frame}

\begin{frame}[fragile]
  \frametitle{Histograms}
  \begin{itemize}
  \item A histogram is a simple bar chart of the number of
    observations in each of a set of adjacent, constant-width
    intervals.
  \item It was popular in the days when all graphics, and most
    calculations, needed to be done by hand.  It shows the
    distribution of the data (see the comments in example 2.1.1).
  \end{itemize}
<<railcarhist,fig=TRUE,echo=FALSE,height=4>>=
show(histogram(~ days, railcar))
@   
\end{frame}

\begin{frame}[fragile]
  \frametitle{Creating a histogram}
  \begin{itemize}
  \item The text gives a description of creating a histogram by hand.
  \item In \R{}, you can use the \code{histogram} function.  The plot
    on the previous slide was created with
<<railcarhistshow,eval=FALSE>>=
histogram(~ days, railcar)
@     
\item There are several optional arguments for the \code{histogram}
  function.  To create a plot like Figure 2.1 we specify the break
  points for the intervals (argument \code{breaks}) and also change
  the label on the x-axis (argument \code{xlab}).
  \end{itemize}
<<railcarhist2show,eval=FALSE>>=
histogram(~ days, railcar, breaks = seq(2, 44, 3), xlab = "Days")
@ 
\end{frame}

\begin{frame}[fragile]
  \frametitle{Histogram like Figure 2.1}
<<railcarhist2,fig=TRUE,echo=FALSE>>=
show(histogram(~ days, railcar, breaks = seq(2, 44, 3), xlab = "Days"))
@ 
\end{frame}

\begin{frame}[fragile]
  \frametitle{Density plots}
  \begin{itemize}
  \item This topic is not covered in the text.  It requires more
    sophisticated software than they were using.
  \item Notice that the histogram shape depends on the somewhat
    arbitrary choice of intervals.
  \item If we are interested in the shape of the distribution of the
    observations we can use an alternative called a density plot.
  \item Without going into details, an empirical density plot centers
    a narrow, ``bell-curve'' density at each observed data point and
    sums the result.  The version in \R{} also adds a ``rug'' with the
    original data values plotted as points and jittered vertically (so
    you can see multiple data points with the same value).
  \end{itemize}
<<raildatadensityplot,eval=FALSE>>=
densityplot(~ days, railcar, xlab = "Days")
@ 
\end{frame}

\begin{frame}[fragile]
  \frametitle{Density plot of the rail data.}
  \begin{center}
<<raildensity,fig=TRUE,echo=FALSE,height=5>>=
show(densityplot(~ days, railcar, xlab = "Days"))
@
  \end{center}
The skewness of this plot indicates that we may want to consider the
logarithm of the days.
\end{frame}

\begin{frame}[fragile]
  \frametitle{Density plot of the rail data (logarithmic scale).}
  \begin{center}
<<raildensitylog,fig=TRUE,echo=FALSE>>=
show(densityplot(~ days, railcar, xlab = "Days",
                 scales = list(x = list(log = 2))))
@
  \end{center}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Silica surface area data, example 2.2}
  \begin{itemize}
  \item The \code{surfarea} data are measurements of the surface area
    of samples of silica.
<<surfareastr>>=
str(surfarea)
summary(surfarea)
## alternative form for univariate data
with(surfarea, summary(area))
@     
  \end{itemize}
\end{frame}

\begin{frame}
  \frametitle{Comparing a histogram and density plot for surfarea}
  \begin{itemize}
  \item The histogram shown in Figure 2.2 indicates a very flat
    distribution.
  \item A density plot shows more of a ``bell-curve'' distribution.
  \end{itemize}
  \begin{center}
<<surfareadensplot,fig=TRUE,echo=FALSE,height=5>>=
show(densityplot(~ area, surfarea,
                 xlab = "Surface area of samples of silica"))
@     
  \end{center}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Plots of bivariate data}
  \begin{itemize}
  \item Although we do analyze univariate data, in practice we are
    often interested in ``input-response'' data, the simplest form of
    which is \Emph{bivariate} (two variables).
  \item The \code{xyplot} function produces a scatterplot of data
    values based on a formula in the first argument.  Many
    optional arguments can be used; for us the \code{type} and
    \code{groups} arguments are important.
  \item The \code{timetemp} data describe the time for a panel to get
    to the testing temperature as a function of the temperature of the
    freezer in which is was stored.  There are two types of panels,
    OEM and repaired.  See
<<helptimetemp,eval = FALSE>>=
?timetemp
@ 
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Subsetting the data}
<<strtimetemp>>=
str(timetemp)
@   
\begin{itemize}
\item Initially we want to create a plot of just the OEM panels
  (Figure 2.5).  We can use the \code{subset} function to extract
  these panels only.  Note that the equality comparison is \code{==},
  not just \code{=}.
\end{itemize}
<<OEMpanels>>=
OEM <- subset(timetemp, type == "OEM")
@
\begin{itemize}
\item A simple plot is obtained with
\end{itemize}
<<xyplotOEM,eval=FALSE>>=
xyplot(time ~ temp, OEM)
@ 
\end{frame}

\begin{frame}[fragile]
  \frametitle{Scatter-plot of OEM panel data only}
  \begin{center}
<<OEMplot,fig=TRUE,echo=FALSE,height=4>>=
show(xyplot(time ~ temp, OEM,
            aspect = 'xy',
            ylab = "Time to reach -10C (min.)",
            xlab = "Temperature in freezer (degrees C)"))
@     
  \end{center}
  \begin{itemize}
  \item An alternative way to generate this plot is to use the
    \code{subset} argument in the call to \code{xyplot}.
  \end{itemize}
<<xyplotOEM2,eval=FALSE>>=
xyplot(time ~ temp, timetemp, subset = type == "OEM")
@   
\end{frame}

\begin{frame}
  \frametitle{Overlaying multiple groups}
  \begin{itemize}
  \item Frequently we want to compare the behavior of two or more
    groups, such as the OEM panels versus the repaired panels, which
    have an extra coat of paint.
  \item The \code{xyplot} function provides two ways of doing this.
    Using the \code{groups} argument provides different symbols and/or
    line types in the same panel.  Usually we use the \code{auto.key}
    argument as well to add a key to the plot so we know which symbol
    corresponds to which group.
  \item An alternative it to use multiple panels (but the same axis
    ranges on each panel to facilitate comparison).  This is done by
    modifying the formula.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Different groups on the same plot panel}
<<xyplotbothshow,eval=FALSE>>=
xyplot(time ~ temp, timetemp, groups = type, type = c("g","p","r"))
@ 
  \begin{center}
<<xyplotboth,fig=TRUE,echo=FALSE,height=5.5>>=
show(xyplot(time ~ temp, timetemp, groups = type,
            type = c("g","p","r"), aspect = 'xy',
            ylab = "Time to reach -10C (min.)",
            xlab = "Temperature in freezer (degrees C)",
            auto.key = list(columns = 2, lines = TRUE))
    )
@ 
  \end{center}
We added ``reference'' lines to facilitate comparison.  
\end{frame}

\begin{frame}[fragile]
  \frametitle{Separate plot panels with common axes}
<<xyplotsepshow,eval=FALSE>>=
xyplot(time ~ temp | type, timetemp, type = c("g","p","r"))
@   
\begin{center}
<<xyplotsep,fig=TRUE,echo=FALSE>>=
show(xyplot(time ~ temp | type, timetemp, type = c("g","p","r"), 
            ylab = "Time to reach -10C (min.)",
            xlab = "Temperature in freezer (degrees C)")
     )
@   
\end{center}
\end{frame}

\begin{frame}
  \frametitle{Runs charts or time-series plots}
  \begin{itemize}
  \item In an \code{xyplot} we typically plot a response versus a
    \Emph{covariate}.  Often the most important covariate in a
    production process is the time order in which units are produced.
  \item This type of data are called \Emph{time-series} data.  When we
    plot such data we usually join the points because the order is
    important.
  \item Sometimes there is a variable in the data frame indicating the
    order.  Often we omit it because it is redundant.  We can generate
    a sequence of indices starting at 1 with the \code{seq\_along}
    function.
  \item The \code{absorb} data set is such a time series of
    measurements on samples taken in one shift.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Runs chart of the absorb data}
<<runsshow,eval=FALSE>>=
xyplot(absorb ~ seq_along(absorb), absorb, type = "b")
@   
\begin{center}
<<runsshow,fig=TRUE,echo=FALSE>>=
show(xyplot(absorb ~ seq_along(absorb), absorb, type = "b",
            xlab = "Sample number within shift",
            ylab = "Oil absorption"))
@   
\end{center}
\end{frame}

\section[2.2 Numerical]{2.2 Numerical summaries and box plots}

\begin{frame}
  \frametitle{Measures of locations}
  \begin{itemize}
  \item In addition to graphical representations of data we can also
    provide numerical summaries.
  \item Typically we provide measures of location, such as the sample mean
    \begin{displaymath}
      \bar{y}=\frac{1}{n}\sum_{i=1}^n y_i
    \end{displaymath}
    or the sample median, which is the middle data value (formula
    2.2.2).  Notice that both of these are given in the output of the
    \code{summary} of a numeric variable.
  \item The sample mean is the point at which the data could be
    balanced. As such it uses all the information in the data but is
    sensitive to outliers.
  \item The sample median is not sensitive to outliers, which is why
    it is used to summarize highly skewed distributions such as
    distributions of salaries.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Sample quantiles}
  \begin{itemize}
  \item The median is an example of a sample \Emph{quantile}, written $q(p),
    0<p<1$ in the text (formula 2.2.4).  The median is $q(0.5)$.
  \item The first and third quartiles are $q(0.25)$ and $q(0.75)$.
    That is, they are points that divide the data with $\frac{1}{4}$
    below and $\frac{3}{4}$ above and vice versa.  The quartiles are
    also given in the \code{summary} output as well as the minimum and
    maximum.
  \end{itemize}
<<summaryout>>=
with(subset(timetemp, type == "OEM"), summary(time))
with(railcar, summary(days))
with(surfarea, summary(area))
@   
\end{frame}

\begin{frame}
  \frametitle{Measures of spread}
  \begin{itemize}
  \item The simplest measure of spread of the data is the range of the
    data values.  However, it is sensitive to the size of the sample
    and to outliers and not of much value in data analysis.
  \item The \Emph{inter-quartile range}
    \begin{displaymath}
      \mathrm{IQR}=q(0.75) - q(0.25)
    \end{displaymath}
    is the width of the ``middle half'' of the data and provides a
    more reproducible measure of spread.
  \item The most commonly used measures of spread are the \Emph{sample
      variance}
    \begin{displaymath}
      s^2=\frac{1}{n-1}\sum_{i=1}^n\left(y_i-\bar{y}\right)^2
    \end{displaymath}
    and its square root, $s$, called the \Emph{sample standard deviation}.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Evaluating IQR, $s$, etc.}
  \begin{itemize}
  \item The inter-quartile range can be evaluated from the
    \code{summary} output.  There is also a function \code{IQR} to
    evaluate it directly.
  \item The function \code{sd} evaluates the sample standard
    deviation.  (\code{var} evaluates the sample variance).
  \item Functions \code{mean} and \code{median} evaluate the
    corresponding measures of location.
  \item The function \code{quantile} evaluates an arbitrary quantile
    from the data.
  \end{itemize}
<<samplestats>>=
with(surfarea,
     c(IQR = IQR(area), mean = mean(area),
       s = sd(area), var = var(area),
       Q1 = quantile(area, 0.25), Q3 = quantile(area, 0.75)))
@   
\end{frame}

\begin{frame}
  \frametitle{Statistics and parameters}
  \begin{itemize}
  \item Quantities like $\bar{y}$ and $s$ are \Emph{sample
      statistics}.  (Any value that can be calculated from the data
    alone is called a statistic.)
  \item When performing statistical inference we have a probability
    model for the distribution of the characteristic of interest
    within the population.  This probability distribution has
    corresponding quantities which we call \Emph{population
      parameters}.
  \item We use Greek letters for the population parameters: the
    population mean is written $\mu$ and the population standard
    deviation is written $\sigma$.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Box-and-whisker plots}
  \begin{itemize}
  \item A \code{boxplot} displays the a ``five-number summary''
    (minimum, first quartile, median, third quartile, maximum) of a
    numeric variable.
  \item The box covers the region from the first to the third
    quartiles.  Whiskers extend to the minimum and maximum of the data
    unless values are too far from the middle of the data and are
    considered potential outliers.  The default definition of ``too
    far'' is more than 1.5 times the width of the box away from the box.
  \item Boxplots are frequently shown vertically, but this wastes
    space.  I prefer the horizontal orientation, especially for
    comparative boxplots.
  \end{itemize}
<<bwplot1show,eval=FALSE>>=
bwplot(~ area, surfarea, xlab = "Surface area of Silica samples")
@ 
\end{frame}

\begin{frame}[fragile]
  \frametitle{Comparative boxplots}
  \begin{center}
<<bwplot1,fig=TRUE,echo=FALSE,height=2.0>>=
show(bwplot(~ area, surfarea, xlab = "Surface area of silica samples"))
@   
  \end{center}
\begin{itemize}
\item To produce a comparative box-and-whisker plot, provide the
  categorical variable on the left hand side of the formula.
\end{itemize}
<<bwplot2show,eval=FALSE>>=
bwplot(batch ~ time, tablets)
@ 
\begin{center}
<<bwplot2,fig=TRUE,echo=FALSE,height=2.5>>=
show(bwplot(batch ~ time, tablets,
            xlab = "Lifetime of chlorine tablets (days)",
            ylab = "Batch of product"))
@   
\end{center}
\end{frame}

\section[2.3 Designed experiments]{2.3 Graphical tools
  for designed experiments}
\begin{frame}
  \frametitle{Designed experiments}
  \begin{itemize}
  \item In a designed experiment certain variables or \Emph{factors}
    are systematically varied while observing the value of a
    response.
  \item If a covariate is categorical we store it as a data type
    called a factor.  The values of a factor must come from a fixed
    set called the \code{levels} of the factor.  Occasionally we will
    use \Emph{ordered factors} (data type is \code{ordered}) where the
    levels have a natural ordering.
  \item For a single factor we often use comparative boxplots to
    evaluate the change in the response with changing levels of the
    factor.  Sometimes comparative dotplots or comparative density
    plots are more effective.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{The optical lens coating data, example 2.3.1}
  \begin{itemize}
  \item This is a balanced, designed experiment on the abrasion
    resistance of four different lens coatings (see description in
    text).  The description \Emph{balanced} means that there were the
    same number of observations on each level of the factor.
  \end{itemize}
<<strdhaze>>=
str(dhaze)
xtabs(~ treatment, dhaze)
@   
\begin{center}
<<dhazebwplot,fig=TRUE,echo=FALSE,height=2.5>>=
show(bwplot(treatment ~ dhaze, dhaze,
            xlab = "Change in haze after 150 cycles of abrasion",
            ylab = "Surface treatment"))
@   
\end{center}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Re-ordering factor levels}
  \begin{itemize}
  \item If the levels of a factor are in an arbitrary order we can
    impose an order to make the plot more informative.  A common way
    of doing this is to order the levels by increasing mean response
    (function \code{reorder})
  \end{itemize}
<<dhbw2show,eval=FALSE>>=
bwplot(reorder(treatment, dhaze) ~ dhaze, dhaze)
@   
\begin{center}
<<dhazebwplot2,fig=TRUE,echo=FALSE,height=3>>=
show(bwplot(reorder(treatment, dhaze) ~ dhaze, dhaze,
            xlab = "Change in haze after 150 cycles of abrasion",
            ylab = "Surface treatment"))
@   
\end{center}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Comparative dotplots}
  \begin{itemize}
  \item Box-and-whisker plots reduce the data to 5 summary statistics.
    This can help to eliminate clutter in a plot but can also miss
    important characteristics.  With only 7 observations per group
    like this we can plot the original data by group to see more detail.
  \item To avoid overplotting of points with the same response value,
    we ``jitter'' the y values and use an open circle (\code{pch=21})
    as the plot character. We also use \code{type} to join the
    averages.
  \end{itemize}
<<dhdotshow,eval=FALSE>>=
dotplot(reorder(treatment, dhaze) ~ dhaze, dhaze, pch = 21,
        jitter.y = TRUE, type = c("p", "a"))
@   
\begin{center}
<<dhazedotplot,fig=TRUE,echo=FALSE,height=3>>=
show(dotplot(reorder(treatment, dhaze) ~ dhaze, dhaze,
             pch = 21, jitter.y = TRUE, type = c("p", "a"),
             xlab = "Change in haze after 150 cycles of abrasion",
             ylab = "Surface treatment"))
@   
\end{center}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Multi-factor experiments}
  \begin{itemize}
  \item In the \code{dhaze} data there is one experimental factor,
    \code{treatment}.
  \item In other experiments we may vary multiple factors, preferably
    in a \Emph{factorial design} where each combination of levels of
    factors has the same number of observations.
  \item We can use \code{xtabs} to determine the number of
    observations at each combination.
  \end{itemize}
<<lwstr>>=
str(lw)  # Example 2.3.2
xtabs(~ comp2 + comp1, lw)
@   
\end{frame}

\begin{frame}[fragile]
  \frametitle{Interaction plots}
  \begin{itemize}
  \item An \Emph{interaction plot} shows the response as a function of
    one factor with symbols or line types determined by a second factor.
  \item Typically the response is on the vertical axis.  I prefer the
    horizontal.  I also reorder factor levels.
  \end{itemize}
<<>>=
dotplot(reorder(comp1, lw) ~ lw, lw,
        groups = comp2, type = c("p", "a"))
@   
\begin{center}
<<lwintplot,fig=TRUE,echo=FALSE,height=3.5>>=
show(dotplot(reorder(comp1, lw) ~ lw, lw, groups = comp2,
             type = c("p", "a"),
             xlab = "Long wave (LW) appearance measure",
             ylab = "Component 1",
             auto.key = list(columns = 3, lines = TRUE)))
@   
\end{center}
\end{frame}
