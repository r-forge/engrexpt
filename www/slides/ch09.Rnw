% NOTE -- ONLY EDIT THE .Rnw FILE!!!  The .tex file is,
% likely to be overwritten.
\usepackage{SweaveSlides}
\title[Chapter 9]{Chapter 9: Multi-factor experiments}
%\subject{Models}
\SweaveOpts{engine=R,eps=FALSE,pdf=TRUE,width=10,height=6.5,strip.white=all,keep.source=TRUE}
\SweaveOpts{prefix=TRUE,prefix.string=figs/ch09,include=TRUE}
\begin{document}
\begin{frame}
  \titlepage
\end{frame}
\begin{frame}
  \frametitle{Outline}
  \tableofcontents[pausesections]
\end{frame}
<<preliminaries,echo=FALSE,results=hide>>=
options(width=60)
library(EngrExpt)
options(show.signif.stars = FALSE)
#lattice.options(default.theme = function() standard.theme(color=FALSE))
@ 
\newcommand{\rvy}{\ensuremath{\mathcal{Y}}}

\begin{frame}
  \frametitle{Chapter 9: Multi-factor experiments}
  \begin{itemize}
  \item We are not limited to using two factors in an experiment.
    Especially in screening experiments, where we are seeking to
    distinguish the ``important few'' factors from the ``trivial
    many'', it is useful to incorporate many factors.
  \item Incorporating many factors, each with several levels, results
    in a large number of combinations of levels.  If we want
    replicates the number of observations required is even larger.
  \item One way to reduce the number of observations required is to
    use a small number of levels. We often use just two levels.
  \item At two levels, there is no distinction between a numeric
    covariate, a categorical covariate or an ordered category.  For
    technical reasons we often represent such a factor as an ordered
    category.
  \end{itemize}
\end{frame}

\section[9.1 Multi-factor ANOVA]{9.1 ANOVA for multi-factor experiments}

\begin{frame}
  \frametitle{Section 9.1: ANOVA for multi-factor experiments}
  \begin{itemize}
  \item For a replicated design we proceed as for two-factor
    experiments and fit a model with all possible interactions.
  \item We check the highest-order interaction first.  If it is not
    significant we re-fit without that term and continue checking.  In
    a balanced factorial design omitting certain interactions will not
    change the estimates of coefficients for other interactions, but
    it will change MS$_e$.
  \item The formula for model with all possible interactions has
    \code{*} between the factors.
  \item We can modify the formula by ``subtracting'' particular terms
    using the \code{update} function.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Example 9.1.1: Battery separator data}
<<strsep>>=
str(separate)
@   
\begin{center}
<<separateplt,fig=TRUE,echo=FALSE,height=4.5>>=
print(dotplot(silica ~ y|temp,separate,groups=time,type=c("p","a"),
              ylab = "Silica level", layout = c(1,2),
              xlab = "Electrical resistance (panels are temperature levels)",
              strip = FALSE, strip.left = TRUE,
              auto.key = list(space = "right", title = "Time",
              lines = TRUE)))
@   
\end{center}
\end{frame}
\begin{frame}[fragile]
  \frametitle{Example 9.1.1 (cont'd)}
<<fm1>>=
summary(fm1 <- aov(y ~ time * temp * silica, separate))
@   
\begin{itemize}
\item We see that the highest-order interaction term is significant.
  In such cases we generally retain all the lower-level interactions
  and the main effects whether or not they have small p-values.  (In
  this case they all do.)
\end{itemize}
\end{frame}
\begin{frame}[fragile]
  \frametitle{Example 9.1.1 (cont'd)}
  \begin{itemize}
  \item There are two approaches for follow-up.  We can consider the 8
    different combinations of factor levels as 8 levels in a
    one-factor model or we can condition on a level of one factor and
    consider the others.
  \end{itemize}
<<fm1a>>=
summary(fm1a <- aov(y ~ time * silica, separate,
                    subset = temp == "High"))
summary(fm1b <- aov(y ~ time + silica, separate,
                    subset = temp == "High"))
@ 
\end{frame}
\begin{frame}[fragile]
  \frametitle{Blocking with multiple experimental factors}
  \begin{itemize}
  \item It is not uncommon to have blocking factors in a multi-factor
    design.  These are known sources of variability that cannot (or
    should not) be held constant.
  \item As before, we list blocking factors first in any model
    formula.  This is not important for balanced data but can be
    important with unbalanced data.
  \end{itemize}
<<xmp9.1.2>>=
str(defect <-
    data.frame(num = c(9,9,5,5,7,8,2,3,8,7,4,4),
               op = gl(3,4),
               app = gl(2,2,12,labels = c("A","B")),
               size = gl(2,1,12)))
@ 
\end{frame}
\begin{frame}[fragile]
  \frametitle{Structure of defect data}
<<ftable>>=
ftable(xtabs(num ~ op+size+app, defect)) # compare Table 9.7
summary(fm2 <- aov(num ~ op + size * app, defect))
@   
\end{frame}
\begin{frame}[fragile]
  \frametitle{Reduced models}
<<fm34>>=
summary(fm3 <- aov(num ~ op + size + app, defect))
summary(fm4 <- aov(num ~ op + app, defect))
@   
\begin{itemize}
\item There is no need for multiple comparisons of levels of
  \code{app} (there are only two levels).
\item Generally we don't compare levels of \code{op} because it is a
  blocking factor.  In this case we may want to investigate why there
  is such a large variability between operators.
\end{itemize}
\end{frame}
\begin{frame}[fragile]
  \frametitle{Unreplicated multi-factor designs}
  \begin{itemize}
  \item If we allow the highest-order interaction term in an
    unreplicated factorial design we will have no degrees of freedom
    for error.  
  \item We can remove the highest-order interaction by using
    ``powers'' in the formula to restrict to interactions up to a
    specific order.
  \end{itemize}
<<defoam>>=
str(defoam)
@   
\end{frame}
\begin{frame}[fragile]
  \frametitle{Plots of the defoam data}
  \begin{center}
<<defoamplt,fig=TRUE,echo=FALSE,height=5>>=
print(dotplot(pH ~ height|conc, defoam, groups = temp,
              xlab = "Height of solution", type = c("p","a"),
              auto.key = list(columns = 3, lines = TRUE),
              layout = c(1,3), aspect = 0.35,
              strip = FALSE, strip.left = TRUE,
              ylab = "pH within concentration"),
      split = c(1,1,2,1), more = TRUE)
print(dotplot(pH ~ height|temp, defoam, groups = conc,
              xlab = "Height of solution", type = c("p","a"),
              auto.key = list(columns = 3, lines = TRUE),
              layout = c(1,3), aspect = 0.35,
              strip = FALSE, strip.left = TRUE,
              ylab = "pH within temperature"),
      split = c(2,1,2,1))
@     
  \end{center}
  \begin{itemize}
  \item Note that there are effectively no differences due to
    concentration, at the levels examined.
  \end{itemize}
\end{frame}
\begin{frame}[fragile]
  \frametitle{Models for the defoam data}
<<fm56>>=
summary(fm5 <- aov(height ~ (conc + pH + temp)^2, defoam))
summary(fm6 <- aov(height ~ (pH + temp)^2, defoam))
@   
\end{frame}

\section[9.2 $2^k$ factorials]{9.2 $2^k$ factorial designs}
\begin{frame}[fragile]
  \frametitle{Section 9.2: $2^k$ factorial designs}
  \begin{itemize}
  \item A commonly used type of screening design is a $2^k$ factorial
    design in which each of $k$ factors is examined at 2 levels only.
  \item Such a design will only detect linear trends and possible
    interactions.  It cannot, for example, detect a quadratic
    relationship reliably (Fig. 9.9).
  \item One technical point, it can be an advantage to represent the
    2-level factors as \code{ordered} and to use the ``Helmert''
    contrasts for ordered factors.  These provide a +/- coding in the
    model matrix.
  \end{itemize}
<<opcontr>>=
options(contrasts = c("contr.treatment", "contr.helmert"))
str(dents <- data.frame(ok = c(917,600,953,750,735,567,977,647),
                        A = gl(2,1,8,ord=1), B = gl(2,2,8,ord=1),
                        C = gl(2,4,ord=1)))
@   
\end{frame}
\begin{frame}[fragile]
  \frametitle{Plots of the dents data}
  \begin{center}
<<dentplt,fig=TRUE,echo=FALSE>>=
print(dotplot(A ~ ok|B, dents, groups = C,
              xlab = "Number of dent-free assemblies", type = c("p","a"),
              auto.key = list(columns = 2, lines = TRUE),
              layout = c(1,2), aspect = 0.7,
              strip = FALSE, strip.left = TRUE,
              ylab = "film thickness within oil mixture"),
      split = c(1,1,2,1), more = TRUE)
print(dotplot(A ~ ok|C, dents, groups = B,
              xlab = "Number of dent-free assemblies", type = c("p","a"),
              auto.key = list(columns = 2, lines = TRUE),
              layout = c(1,2), aspect = 0.7,
              strip = FALSE, strip.left = TRUE,
              ylab = "film thickness within glove type"),
      split = c(2,1,2,1))
@     
    
  \end{center}
\end{frame}
\begin{frame}[fragile]
  \frametitle{Model fits for the dents data}
<<fm7>>=
summary(fm7 <- aov(ok ~ (A+B+C)^2, dents))
@ 
$\mbox{}$\\
None of the two-factor interactions are significant (but it is very
difficult to show significance with 1 degree of freedom for residuals).
<<fm8>>=
summary(fm8 <- aov(ok ~ A+B+C, dents))
@   
\end{frame}
\begin{frame}[fragile]
  \frametitle{Model fits for the dents data (cont'd)}
<<fm9>>=
summary(fm9 <- aov(ok ~ A+B, dents))
@   
$\mbox{}$\\
<<sumlm9,eval=FALSE>>=
summary.lm(fm9)
@ 
<<sumlm9res,echo=FALSE>>=
cat(paste(capture.output(summary.lm(fm9))[-(1:8)], collapse = "\n"))
@ 
$\mbox{}$\\
<<fitted>>=
fitted(fm9)
@ 
\end{frame}
\begin{frame}
  \frametitle{Interpretation of coefficients}
  \begin{itemize}
  \item The coefficients shown in the \code{summary.lm} output are in
    the +/- encoding.  The \code{(Intercept)} is the response for a
    ``typical'' setting; the \code{A1} coefficient is added to this
    for the high level of \code{A} and subtracted for the low level.
    Similarly for \code{B1}.

  \item That is, the fitted values are the \code{(Intercept)} plus the
    four possible combinations of $\pm$\code{A1} and $\pm$\code{B1}.
  \end{itemize}
\end{frame}
