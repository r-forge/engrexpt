
R version 2.9.0 alpha (2009-03-31 r48262)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EngrExpt)
Loading required package: lattice
> #lattice.options(default.theme = standard.theme())
> trellis.device(pdf, file = "dataplots.pdf", height = 6, width = 10)
> 
> ls.str("package:EngrExpt")
absorb : 'data.frame':	102 obs. of  1 variable:
 $ absorb: num  97.5 99.5 99.5 98 98.5 ...
adhesion : 'data.frame':	30 obs. of  2 variables:
 $ adhesion: num  15.2 15.7 15.9 14.3 15.8 ...
 $ ph      : num  4.3 5.3 6.3 4.3 5.3 6.3 4.3 5.3 6.3 4.3 ...
adhesion2 : 'data.frame':	30 obs. of  3 variables:
 $ cat     : Factor w/ 2 levels "A","B": 1 1 1 1 1 2 2 2 2 2 ...
 $ ph      : num  4.3 4.3 4.3 4.3 4.3 4.3 4.3 4.3 4.3 4.3 ...
 $ adhesion: num  13.2 13.6 13.8 14.2 14.3 ...
applicat : 'data.frame':	18 obs. of  4 variables:
 $ distance: int  13 13 13 11 11 11 15 15 15 13 ...
 $ charge  : int  45 35 55 35 45 55 35 45 55 45 ...
 $ flowrate: int  94 94 94 94 94 94 94 94 94 94 ...
 $ gloss   : num  63 62.3 69.1 64.2 69 71.6 58.4 61.1 62.8 70.3 ...
assay : 'data.frame':	9 obs. of  2 variables:
 $ process: int  1 1 1 1 2 2 2 2 2
 $ yield  : num  36.5 39.1 44 38.2 94.9 74.8 68.3 75 85.7
bath : 'data.frame':	4 obs. of  1 variable:
 $ time......temp........er: Factor w/ 4 levels "       -1        -1        36",..: 1 4 3 2
battery : 'data.frame':	30 obs. of  2 variables:
 $ type    : int  1 1 1 1 1 1 1 1 1 1 ...
 $ lifetime: num  2.06 2.47 2.31 2.92 3.11 ...
bright : 'data.frame':	16 obs. of  6 variables:
 $ type    : Factor w/ 2 levels "A","B": 1 2 1 2 1 2 1 2 1 2 ...
 $ percent : num  0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.75 0.75 ...
 $ time    : int  30 30 30 30 45 45 45 45 30 30 ...
 $ hardness: int  150 150 250 250 150 150 250 250 150 150 ...
 $ speed   : Factor w/ 2 levels "F","S": 2 1 1 2 1 2 2 1 1 2 ...
 $ bright  : num  53.6 57.4 54.8 57 53.4 ...
ccthickn : 'data.frame':	40 obs. of  1 variable:
 $ thickness: num  64.7 64.5 71.3 61.4 60.6 66.4 64.2 62.6 61.4 64.8 ...
cement : 'data.frame':	19 obs. of  2 variables:
 $ type: Factor w/ 3 levels "A","B","C": 1 1 1 1 1 1 1 1 2 2 ...
 $ time: num  8.3 8.7 8 8.4 8.6 8.5 8.7 8.8 7.5 8.3 ...
chemreac : 'data.frame':	16 obs. of  4 variables:
 $ temp : int  120 120 120 120 120 120 120 120 140 140 ...
 $ cat  : int  1 1 1 1 2 2 2 2 1 1 ...
 $ time : int  10 10 30 30 10 10 30 30 10 10 ...
 $ yield: num  40.9 41.7 52.3 49.2 34.1 ...
curl : 'data.frame':	12 obs. of  3 variables:
 $ catalyst: num  0.45 0 0.225 0.45 0 0 0.45 0 0.225 0.225 ...
 $ compa   : num  3.345 0.885 3.345 3.345 0 ...
 $ curl    : int  69 29 69 92 26 55 67 47 75 66 ...
defoam : 'data.frame':	27 obs. of  4 variables:
 $ conc  : Factor w/ 3 levels "H","L","M": 2 2 2 2 2 2 2 2 2 3 ...
 $ ph    : Factor w/ 3 levels "H","L","M": 2 2 2 3 3 3 1 1 1 2 ...
 $ temp  : Factor w/ 3 levels "H","L","M": 2 3 1 2 3 1 2 3 1 2 ...
 $ height: num  30.9 35.2 40.1 39.8 42.4 ...
deink : 'data.frame':	27 obs. of  3 variables:
 $ alkali  : num  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.4 ...
 $ hardness: int  50 50 50 150 150 150 250 250 250 50 ...
 $ bright  : num  60.7 61.2 60.4 62 62.4 ...
deink2 : 'data.frame':	15 obs. of  3 variables:
 $ formula  : int  1 1 1 1 1 2 2 2 2 2 ...
 $ newspaper: int  1 2 3 4 5 1 2 3 4 5 ...
 $ bright   : int  64 68 66 72 67 71 74 79 81 62 ...
dhaze : 'data.frame':	28 obs. of  2 variables:
 $ treatment: int  1 1 1 1 1 1 1 2 2 2 ...
 $ dhaze    : num  8.52 9.21 10.45 10.23 8.75 ...
diameter : 'data.frame':	20 obs. of  2 variables:
 $ line    : int  1 1 1 1 1 1 1 1 1 1 ...
 $ diameter: num  2.18 2.12 2.24 2.31 2.02 2.09 2.23 2.02 2.19 2.32 ...
drums : 'data.frame':	30 obs. of  3 variables:
 $ number: int  1 2 3 4 5 6 7 8 9 10 ...
 $ empty : num  43 43 43 43 42.8 43 42.8 42.9 43 42.8 ...
 $ full  : num  470 469 469 469 469 ...
dry : 'data.frame':	16 obs. of  3 variables:
 $ rate    : Factor w/ 2 levels "BATCH","TUNNEL": 2 1 2 1 1 2 2 1 1 2 ...
 $ type    : Factor w/ 2 levels "FAST","SLOW": 1 1 2 2 1 2 1 2 1 2 ...
 $ response: num  63.3 62.9 62.9 62 63.3 61.9 63 63 62.7 62.8 ...
epoxy : 'data.frame':	10 obs. of  2 variables:
 $ epoxy: num  0.59 0.59 1 1.5 2 0.59 0.59 1 1.5 2
 $ lw   : num  6.9 5.1 7.6 11.4 12.5 8.5 8.2 10.9 12.9 13.5
fluoride : 'data.frame':	58 obs. of  2 variables:
 $ source  : int  1 1 1 1 1 1 1 1 1 1 ...
 $ fluoride: num  0.84 0.83 0.75 0.74 0.78 0.9 0.72 0.74 0.82 0.7 ...
gloss : 'data.frame':	40 obs. of  2 variables:
 $ color: Factor w/ 4 levels "Black","Green",..: 2 1 3 4 2 1 3 4 2 1 ...
 $ gloss: int  90 88 88 88 87 91 88 87 89 89 ...
labcomp : 'data.frame':	28 obs. of  3 variables:
 $ lab: int  1 1 1 1 1 1 1 2 2 2 ...
 $ pt1: num  167 168 167 167 164 ...
 $ pt5: Factor w/ 13 levels ".","151.8","152.9",..: 1 1 1 1 1 1 1 1 1 1 ...
lw : 'data.frame':	24 obs. of  3 variables:
 $ lw   : num  10.4 8.7 6.5 8.3 11.5 11.2 5.3 5.9 4.2 5.4 ...
 $ comp1: int  1 1 1 1 1 1 2 2 2 2 ...
 $ comp2: int  1 1 2 2 3 3 1 1 2 2 ...
lwsw : 'data.frame':	13 obs. of  2 variables:
 $ lw: num  10.4 7.3 10.5 6.5 5.1 4.2 7 9.4 6.9 5.1 ...
 $ sw: num  30.5 28.9 29.9 24.2 23.1 24.4 29 27.3 22.8 21.1 ...
mw : 'data.frame':	32 obs. of  6 variables:
 $ a : Factor w/ 2 levels "H","L": 2 2 2 2 2 2 2 2 2 2 ...
 $ b : Factor w/ 2 levels "H","L": 2 2 2 2 2 2 2 2 1 1 ...
 $ c : Factor w/ 2 levels "H","L": 2 2 2 2 1 1 1 1 2 2 ...
 $ d : Factor w/ 2 levels "H","L": 2 2 1 1 2 2 1 1 2 2 ...
 $ e : Factor w/ 2 levels "H","L": 2 1 2 1 2 1 2 1 2 1 ...
 $ mw: int  5895 5843 5895 5739 5791 6002 6002 5948 5895 5843 ...
odor : 'data.frame':	35 obs. of  3 variables:
 $ odor     : num  4.54 3.41 4.41 2.82 4.71 ...
 $ yellowing: num  2.36 3.46 1.45 3.08 4.28 3.1 2.08 1.74 3.07 0.98 ...
 $ hardness : num  82.6 79.1 87.5 86.5 78.8 ...
oven : 'data.frame':	30 obs. of  3 variables:
 $ brand   : int  1 1 1 1 1 1 1 1 1 1 ...
 $ type    : int  1 1 1 1 1 2 2 2 2 2 ...
 $ moisture: int  72 68 76 74 70 66 63 70 65 66 ...
ph : 'data.frame':	35 obs. of  2 variables:
 $ batch: int  1 1 1 1 1 1 1 1 1 1 ...
 $ ph   : num  6.13 6.5 6.74 6.6 6.53 6.45 6.5 6.55 6.38 6.55 ...
phmeas : 'data.frame':	11 obs. of  2 variables:
 $ phold: num  6.35 6.01 6.15 6 6.11 5.93 5.84 5.63 5.63 6.11 ...
 $ phnew: num  6.16 5.95 6.05 6.01 6.06 5.83 5.81 5.71 5.74 6.1 ...
pigment : 'data.frame':	9 obs. of  3 variables:
 $ batch  : int  1 1 1 2 2 2 3 3 3
 $ pigment: Factor w/ 3 levels "A","B","C": 1 2 3 1 2 3 1 2 3
 $ deltab : num  0.2 0.4 1.2 0.1 0.3 0.8 0.2 0.5 1.1
purity : 'data.frame':	12 obs. of  4 variables:
 $ tech  : Factor w/ 12 levels "1 1 1 119.0",..: 1 3 5 2 4 6 7 9 11 8 ...
 $ fac1  : logi  NA NA NA NA NA NA ...
 $ fac2  : logi  NA NA NA NA NA NA ...
 $ purity: logi  NA NA NA NA NA NA ...
railcar : 'data.frame':	53 obs. of  1 variable:
 $ days: int  4 42 4 4 3 5 5 5 3 7 ...
railcar2 : 'data.frame':	43 obs. of  1 variable:
 $ days: int  37 0 0 0 2 15 0 4 0 2 ...
railcar3 : 'data.frame':	17 obs. of  2 variables:
 $ type    : int  1 1 2 1 2 2 2 1 1 2 ...
 $ moisture: num  3.4 3.1 2.3 2.6 2.1 2.8 2.5 3 3.2 2.6 ...
ratings : 'data.frame':	26 obs. of  1 variable:
 $ rating: num  9.38 9.51 8.99 9.16 7.8 8.69 9.46 8.63 9.2 8.61 ...
ratings2 : 'data.frame':	26 obs. of  2 variables:
 $ rating  : num  9.38 9.51 8.99 9.16 7.8 8.69 9.46 8.63 9.2 8.61 ...
 $ moisture: num  3.8 4.8 5.2 3.3 4.5 4 4.3 3.4 5.5 3.5 ...
reflect : 'data.frame':	8 obs. of  5 variables:
 $ binder : Factor w/ 2 levels "A","B": 1 1 1 1 2 2 2 2
 $ base   : Factor w/ 2 levels "A","B": 1 1 2 2 1 1 2 2
 $ time   : Factor w/ 2 levels "H","L": 1 2 1 2 1 2 1 2
 $ ratio  : int  2 1 1 2 1 2 2 1
 $ reflect: num  1.77 0.95 2.88 1.93 1.81 1 2.81 2.17
safety : 'data.frame':	30 obs. of  4 variables:
 $ year     : int  93 93 93 93 93 93 94 94 94 94 ...
 $ place    : Factor w/ 6 levels "CA","KY","MI",..: 2 5 1 6 3 4 2 5 1 6 ...
 $ employees: int  1366 560 317 1711 681 650 1366 560 317 1711 ...
 $ cases    : int  41 23 2 61 48 23 38 22 3 33 ...
sales : 'data.frame':	48 obs. of  3 variables:
 $ capital: num  78.9 79.3 79.9 80.3 80.5 ...
 $ pindex : num  105 106 108 109 110 ...
 $ sales  : int  18842 16859 19001 18905 17450 20940 18469 19094 19325 18396 ...
sarea : 'data.frame':	12 obs. of  3 variables:
 $ batch: int  1 1 1 1 2 2 2 2 3 3 ...
 $ tech : int  1 2 3 4 1 2 3 4 1 2 ...
 $ sarea: int  143 142 147 142 145 146 149 144 121 123 ...
separate : 'data.frame':	24 obs. of  4 variables:
 $ silica: Factor w/ 2 levels "High","Low": 2 2 2 2 2 2 2 2 2 2 ...
 $ time  : Factor w/ 2 levels "High","Low": 2 2 2 2 2 2 1 1 1 1 ...
 $ temp  : Factor w/ 2 levels "High","Low ": 2 2 2 1 1 1 2 2 2 1 ...
 $ y     : num  40.9 42.2 41.3 46.3 47 48.2 48.6 49.5 46.6 69 ...
soap : 'data.frame':	5 obs. of  3 variables:
 $ box   : Factor w/ 4 levels ".","32.6","35.4",..: 4 2 3 1 1
 $ foil  : num  52.8 57.3 56.6 58 55.7
 $ shrink: num  33.1 29.7 38.3 32.6 33.7
stab : 'data.frame':	12 obs. of  4 variables:
 $ temp    : int  23 23 23 23 23 23 35 35 35 35 ...
 $ humidity: int  0 0 0 85 85 85 0 0 0 85 ...
 $ time    : int  1 4 8 1 4 8 1 4 8 1 ...
 $ y       : num  19.4 19.3 19.5 15.9 15.4 15.2 19.2 15.4 14.9 12.3 ...
surfarea : 'data.frame':	32 obs. of  1 variable:
 $ area: num  102 100 101 103 104 ...
temprate : 'data.frame':	12 obs. of  3 variables:
 $ temp    : int  185 185 185 185 210 210 210 210 185 185 ...
 $ rate    : Factor w/ 3 levels "FAST","MED","SLOW": 1 1 3 3 1 1 3 3 2 2 ...
 $ response: num  62.7 62.6 62.7 62.8 63.1 63.3 63.4 63.6 62.4 62.2 ...
tennis : 'data.frame':	20 obs. of  2 variables:
 $ type: Factor w/ 4 levels "A","B","C","D": 1 1 1 1 1 2 2 2 2 2 ...
 $ wear: int  135 121 113 151 113 170 211 149 200 185 ...
thinfilm : 'data.frame':	30 obs. of  3 variables:
 $ material: Factor w/ 2 levels "foil","glass": 1 1 1 1 1 1 1 1 1 1 ...
 $ comp    : int  50 50 50 50 50 45 45 45 45 45 ...
 $ maxload : num  3.49 4.65 4.27 3.8 3.54 5.08 4.79 5.1 3.85 4.56 ...
thinfilm1 : 'data.frame':	30 obs. of  3 variables:
 $ material.s5.: Factor w/ 2 levels "foil","glass": 1 1 1 1 1 1 1 1 1 1 ...
 $ comp        : int  50 50 50 50 50 45 45 45 45 45 ...
 $ maxload     : num  3.49 4.65 4.27 3.8 3.54 5.08 4.79 5.1 3.85 4.56 ...
timetemp : 'data.frame':	24 obs. of  3 variables:
 $ time: int  5 11 16 9 14 6 6 16 13 11 ...
 $ temp: num  -22.7 -25.5 -29 -24.8 -27.2 -23.5 -23.9 -28.7 -26.8 -25.9 ...
 $ type: int  1 1 1 1 1 1 1 1 1 1 ...
tpaste : 'data.frame':	8 obs. of  4 variables:
 $ nacl     : int  2 20 20 2 20 20 2 2
 $ temp     : int  80 50 80 50 50 80 80 50
 $ rate     : int  30 80 30 80 30 80 80 30
 $ turbidity: num  82.3 85.6 12.2 84.3 36.5 70.3 97.5 88.6
uvcoatin : 'data.frame':	10 obs. of  3 variables:
 $ a   : num  8.9 9.4 11.2 11.4 13 6.4 13.4 5.6 4.8 15.8
 $ b   : num  8.5 9.3 10.8 11.6 12.9 6.5 13.1 5.1 4.3 15.6
 $ diff: num  0.4 0.1 0.4 -0.2 0.1 -0.1 0.3 0.5 0.5 0.2
viscosity : 'data.frame':	17 obs. of  1 variable:
 $ time: int  0 1 2 3 4 7 8 9 10 11 ...
vitamin : 'data.frame':	49 obs. of  3 variables:
 $ treatment: Factor w/ 3 levels "A","B","C": 1 1 1 1 1 1 1 1 1 1 ...
 $ before   : num  47.25 27.16 13.4 11.68 4.07 ...
 $ after    : num  145 132 128 178 151 ...
wash : 'data.frame':	36 obs. of  3 variables:
 $ type : Factor w/ 2 levels "NW","W": 1 1 1 2 2 2 1 1 1 2 ...
 $ time1: int  16 14 14 14 16 15 13 12 15 13 ...
 $ time2: int  18 18 18 16 16 16 18 15 16 17 ...
webtraff : 'data.frame':	10 obs. of  2 variables:
 $ weeks  : int  1 1 2 2 3 3 4 4 0 0
 $ traffic: int  54 65 75 79 69 74 58 62 32 45
webvisit : 'data.frame':	21 obs. of  1 variable:
 $ visits: int  15321 15382 15337 15338 14320 15366 15251 15319 15405 14594 ...
whitearea : 'data.frame':	48 obs. of  2 variables:
 $ process  : int  1 1 1 1 1 1 1 1 1 1 ...
 $ whitearea: num  0.89 0.91 0.72 1.28 1.25 1.14 0.96 0.62 0.47 0.94 ...
yellow : 'data.frame':	23 obs. of  2 variables:
 $ b1: num  0.83 0.74 0.77 0.69 0.9 0.6 0.94 0.59 0.6 0.55 ...
 $ b2: num  0.91 0.86 0.99 0.8 0.88 0.7 0.75 0.73 0.69 0.51 ...
yield : 'data.frame':	20 obs. of  3 variables:
 $ temp : num  20.9 21.2 20.8 20.1 20.3 22.7 20.4 22 20.5 21.5 ...
 $ ph   : num  6.8 6.3 6.8 6.4 6.3 6.6 6.4 6.7 6.8 6.5 ...
 $ yield: num  32.5 32.1 32.2 31.6 30.8 33 31.5 32.9 32.4 32.5 ...
> 
> densityplot(~ absorb, absorb, xlab = "Average oil absorption of silica samples")
> qqmath(~ absorb, absorb, ylab = "Average oil absorption of silica samples",
+        xlab = "Standard normal quantiles", aspect = 1)
> xyplot(adhesion ~ ph, adhesion, ylab = "Adhesion of a lens coating",
+        xlab = "pH", type = c("g", "p", "a"))
> dotplot(as.factor(ph) ~ adhesion, adhesion, ylab = "pH", type =
+        c("p","a"), xlab = "Adhesion of a lens coating")
> dotplot(as.factor(ph) ~ adhesion, adhesion2, groups = cat,
+         type = c("p","a"), ylab = "pH", xlab = "Adhesion of a lens coating",
+         auto.key = list(space = "right", lines = TRUE, title = "Catalyst"))
> dotplot(as.factor(charge) ~ gloss|as.factor(flowrate), applicat, groups = distance,
+         strip = FALSE, type = c("p", "a"), layout = c(1,2), ylab = "Charge",
+         strip.left = TRUE, auto.key = list(space = "right", lines = TRUE, title = "Distance"))
> qqmath(~ yield, assay, groups = process, auto.key = list(space = "right", title = "Process"),
+        type = c("g", "p"), aspect = 1, xlab = "Standard normal quantiles")
> dotplot(reorder(as.factor(type), lifetime) ~ lifetime, battery, xlab = "Lifetime", ylab = "Type", type = c("p", "a"))
> densityplot(~ thickness, ccthickn)
> qqmath(~ thickness, ccthickn, aspect = 1, xlab = "Standard normal quantiles", type = c("g","p"),
+        panel=function(...){panel.qqmathline(..., alpha = 0.5, lty = 2); panel.qqmath(...)})
> qqmath(~ time, cement, groups = type, aspect = 1, xlab = "Standard normal quantiles",
+ #       type = c("g","p"),
+ #       panel=function(...){panel.qqmathline(..., alpha = 0.5, lty = 2); panel.qqmath(...)},
+        auto.key = list(space = "right", title = "Type"))
> dotplot(as.factor(temp) ~ yield | as.factor(time), chemreac, groups = cat,
+         strip = FALSE, strip.left = TRUE, type = c("p", "a"), layout = c(1,2),
+         auto.key = list(space = "right", title = "Catalyst", lines = TRUE))
> 
> 
> proc.time()
   user  system elapsed 
  4.280   0.144   4.404 
